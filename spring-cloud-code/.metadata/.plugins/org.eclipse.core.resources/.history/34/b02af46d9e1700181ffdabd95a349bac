server.port=8761

spring.application.name=ServicesDiscover
eureka.instance.hostname=localhost
#是否将自身注册
eureka.client.registerWithEureka=false
#如果为true，启动时报警.
eureka.client.fetchRegistry=false
#关闭eurekaserver的健康检测
eureka.server.enableSelfPreservation=false
#设置检测
#leaseExpirationDurationInSeconds，表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。
#默认为90秒
#如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
#如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
#该值至少应该大于leaseRenewalIntervalInSeconds
eureka.instance.leaseExpirationDurationInSeconds=2  
#leaseRenewalIntervalInSeconds，表示eureka client发送心跳给server端的频率。
#如果在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance。
#除此之外，如果该instance实现了HealthCheckCallback，并决定让自己unavailable的话，则该instance也不会接收到流量。
#关于配置解释可以参考https://stackoverflow.com/questions/33921557/understanding-spring-cloud-eureka-server-self-preservation-and-renew-threshold
eureka.instance.leaseRenewalIntervalInSeconds=1

eureka.server.renewalPercentThreshold=0.49
eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/