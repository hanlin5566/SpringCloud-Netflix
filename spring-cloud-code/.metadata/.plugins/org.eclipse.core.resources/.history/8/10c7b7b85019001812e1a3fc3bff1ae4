package com.hanson.hystrix;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.SpringApplication;
import org.springframework.cloud.client.SpringCloudApplication;
import org.springframework.cloud.client.loadbalancer.LoadBalanced;
import org.springframework.context.annotation.Bean;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;
//注解整合了多个注解，@SpringBootApplication、@EnableDiscoveryClient、@EnableCircuitBreaker等
@SpringCloudApplication
@RestController
public class HystrixApplication {
	public static void main(String[] args) {
		SpringApplication.run(HystrixApplication.class, args);
	}
	
	@Autowired
    RestTemplate client;
	
	@Value("${server.port}")
    private String port;
	
	@Bean
	@LoadBalanced
	RestTemplate restTemplate() {
		return new RestTemplate();
	}
	
	@HystrixCommand(fallbackMethod = "hiError")
	@RequestMapping("/")
    public String helloWorld() {
		//hanson-service 为服务提供者的配置的spring.application.name
		String forObject = client.getForObject("http://hanson-service/", String.class);
		forObject = String.format("port:%s  %s",port,forObject);
		System.out.println();
        return forObject;
    }
}
